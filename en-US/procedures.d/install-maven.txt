
=== Build and run a development installation

These steps install numerous dependencies required
to build and run a development installation of Eureka Streams.
This procedure is based on the instructions at
http://www.eurekastreams.org/build-and-run/[].

==== Install prerequisite packages

These steps use `sudo` to run commands as `root`.
You could also run `sudo -i` to become `root`.

////
. Install `maven2`
+
----
sudo yum -y install maven2 maven2-manual
----
////

. Install `memcached`
+
----
sudo yum -y install memcached
sudo /sbin/service memcached start
sudo /sbin/chkconfig memcached on
----

. Install Git
+
----
sudo yum -y install git-all
----

. Install Postgres client and server
+
----
sudo yum -y install postgresql postgresql-server
sudo /sbin/service postgresql initdb
sudo /sbin/service postgresql start
sudo /sbin/chkconfig postgresql on
----

. Install Java from http://www.java.com/en[]

==== Install and configure Maven

These steps install Maven2 using the binary distribution
from the Apache web site.

. Download Maven2
.. Open http://maven.apache.org/download.html[] in your browser
.. Click on the link for the current version of Maven2 to
see a list of download mirrors
.. The top of the page suggests a mirror based on your IP
.. Download the tarball using your browser, `curl`, or `wget`
+
[source,bash]
----
url=http://apache.inetbridge.net/maven/binaries/apache-maven-2.2.1-bin.tar.gz
wget -P /tmp $url
----

.. List the contents of the tarball
+
----
tar tzf apache-maven-2.2.1-bin.tar.gz
----
+
With my download, the tarball contains:
+
----
apache-maven-2.2.1/boot/classworlds-1.1.jar
apache-maven-2.2.1/LICENSE.txt
apache-maven-2.2.1/NOTICE.txt
apache-maven-2.2.1/README.txt
apache-maven-2.2.1/bin/m2.conf
apache-maven-2.2.1/bin/mvn.bat
apache-maven-2.2.1/bin/mvnDebug.bat
apache-maven-2.2.1/bin/mvn
apache-maven-2.2.1/bin/mvnDebug
apache-maven-2.2.1/conf/
apache-maven-2.2.1/conf/settings.xml
apache-maven-2.2.1/lib/maven-2.2.1-uber.jar
----

.. Optionally, download the PDF documentation for offline viewing
+
----
url=http://maven.apache.org/apache-maven.pdf
wget -P ~/ $url
----

. Extract the tarball into `/usr/local`
.. Become `root`
+
----
sudo -i
----
+
NOTE: If you have not setup `/etc/sudoers`, use `su -`

.. Extract the tarball
+
----
dest=/usr/local
src=/tmp/apache-maven-2.2.1-bin.tar.gz
tar xvzf $src -C $dest
----

. Update the `$PATH` environment variable
.. As `root`, create `/etc/profile.d/apache-maven.sh`
+
[source,bash]
----
# add extra paths to PATH environment var
export M2_HOME=/usr/local/apache-maven-2.2.1
export M2=$M2_HOME/bin
paths="
$M2
"
for path in ${paths}; do
  if ! echo ${PATH//:/\\n} | /bin/egrep "^${path}$" ; then
    PATH=${PATH}:${path}
  fi
done

# optionally set maven options
#MAVEN_OPTS="-Xms256m -Xmx512m"
----

.. As yourself, source the new path and confirm there are no typos
+
----
. /etc/profile.d/apache-maven.sh
echo $M2_HOME
echo $M2
echo $PATH
which mvn
----

. Update `$JAVA_HOME`
.. Determine which Java your system is using
+
----
alternatives --config java
----
+
This will display something similar to:
+
----
There are 4 programs which provide 'java'.

  Selection    Command
-----------------------------------------------
   1           /usr/lib/jvm/jre-1.6.0-openjdk/bin/java
   2           /usr/lib/jvm/jre-1.5.0-gcj/bin/java
   3           /usr/java/jre1.6.0_16/bin/java
*+ 4           /usr/java/latest/bin/java

Enter to keep the current selection[+], or type selection number: 
----
+
Press `Enter` to avoid changes.

.. As `root`, create `/etc/profile.d/java-home.sh`
+
----
_java=$(readlink /etc/alternatives/java)
export JAVA_HOME=${_java%%bin*}
export PATH=$PATH:$JAVA_HOME/bin
----

.. Source the above file and confirm `JAVA_HOME`
is correctly set
+
----
. /etc/profile.d/java-home.sh
echo $JAVA_HOME
----

. Optionally, create `~/.m2/settings.xml` per http://maven.apache.org/settings.html[]


==== Retrieve source code for Eureka Streams

These steps use `git` to clone the Eureka Streams source code 
from Github.

. Become `root` with a login shell
+
----
sudo -i
----

. Clone the repo to an appropriate location
+
----
pushd /opt
git clone http://github.com/lmco/eurekastreams.git
popd
----

==== Install Maven dependencies

These steps install the Apache Shindig Social Connector using 
the source from the Eureka Streams repository.
Eureka Streams depends on a specific version of Shindig
that is currently unavailable in the Apache public repository.

NOTE: These steps assume you are still logged in as `root`.
If you have the electronic copy of this document, simply copy
and paste.

. Change into the top level directory of the Eureka Streams local repo:
+
----
cd /opt/eurekastreams
----

. Install Shindig 

.. Common components
+
----
mvn install:install-file -Dfile=lib/shindig-common-3.3.jar \
	-DgroupId=org.apache.shindig \
	-DartifactId=shindig-common -Dversion=3.3 \
	-Dpackaging=jar -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 45 seconds
[INFO] Finished at: Fri Aug 13 15:48:10 EDT 2010
[INFO] Final Memory: 6M/54M
[INFO] ------------------------------------------------------------------------
----

.. Features
+
----
mvn install:install-file -Dfile=lib/shindig-features-3.3.jar \
	-DgroupId=org.apache.shindig \
	-DartifactId=shindig-features -Dversion=3.3 \
	-Dpackaging=jar -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Fri Aug 13 15:50:53 EDT 2010
[INFO] Final Memory: 5M/52M
[INFO] ------------------------------------------------------------------------
----

.. Gadgets
+
----
mvn install:install-file -Dfile=lib/shindig-gadgets-3.3.jar \
	-DgroupId=org.apache.shindig \
	-DartifactId=shindig-gadgets -Dversion=3.3 \
	-Dpackaging=jar -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Fri Aug 13 15:52:23 EDT 2010
[INFO] Final Memory: 5M/53M
[INFO] ------------------------------------------------------------------------
----

.. Server
+
----
mvn install:install-file -Dfile=lib/shindig-server-3.3.war \
	-DgroupId=org.apache.shindig \
	-DartifactId=shindig-server -Dversion=3.3 \
	-Dpackaging=war -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Fri Aug 13 15:53:03 EDT 2010
[INFO] Final Memory: 5M/53M
[INFO] ------------------------------------------------------------------------
----

.. Social API
+
----
mvn install:install-file -Dfile=lib/shindig-social-api-3.3.jar \
	-DgroupId=org.apache.shindig \
	-DartifactId=shindig-social-api -Dversion=3.3 \
	-Dpackaging=jar -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Fri Aug 13 15:53:57 EDT 2010
[INFO] Final Memory: 5M/53M
[INFO] ------------------------------------------------------------------------
----

.. Common
+
----
mvn install:install-file -Dfile=lib/shindig-common-3.3-tests.jar \
	-DgroupId=org.apache.shindig \
	-DartifactId=shindig-common -Dversion=3.3 \
	-Dpackaging=test-jar -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Fri Aug 13 15:54:31 EDT 2010
[INFO] Final Memory: 5M/53M
[INFO] ------------------------------------------------------------------------
----

.. GWT DND
+
----
mvn install:install-file -Dfile=lib/gwt-dnd-2.6.5.2.jar \
	-DgroupId=com.google.code.gwt-dnd \
	-DartifactId=gwt-dnd -Dversion=2.6.5.2 \
	-Dpackaging=jar -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Fri Aug 13 15:55:09 EDT 2010
[INFO] Final Memory: 5M/53M
[INFO] ------------------------------------------------------------------------
----

.. Carousel
+
----
mvn install:install-file -Dfile=lib/carousel-0.6.1.jar \
	-DgroupId=com.gwtyuicarousel \
	-DartifactId=carousel -Dversion=0.6.1 \
	-Dpackaging=jar -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Fri Aug 13 15:55:51 EDT 2010
[INFO] Final Memory: 5M/53M
[INFO] ------------------------------------------------------------------------
----

.. URLrewrite
+
----
mvn install:install-file -Dfile=lib/urlrewrite-3.2.0-beta.jar \
	-DgroupId=org.tuckey \
	-DartifactId=urlrewrite -Dversion=3.2.0-beta \
	-Dpackaging=jar -DgeneratePom=true
----
+
The above command will download components from the Internet,
install components, and report its final status:
+
----
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: < 1 second
[INFO] Finished at: Fri Aug 13 15:56:39 EDT 2010
[INFO] Final Memory: 5M/53M
[INFO] ------------------------------------------------------------------------
----

==== Compile and install source

These steps compile and install the Eureka Streams source code.

. Define some preferences

.. Create `/opt/eurekastreams/myprefs.sh`
+
----
dbserver=127.0.0.1
dbname=eurekastreams
dbuser=eruekastreams
export WEBPORT=80
export GRWEBPORT=8080
lucene_indexdir=/opt/lucene/index
lucene_sourcedir=/opt/lucene/source
cache="localhost:11211"
baseurl="http://$(hostname):$WEBPORT"
grbaseurl="http://$(hostname):$GRWEBPORT"
----

.. Check the file into Git
+
----
pushd /opt/eurekastreams
git add myprefs.sh
git commit -m 'save my preferences'
----

.. Source the above file and make directories
+
----
source /opt/eurekastreams/myprefs.sh
mkdir -p $lucene_indexdir
mkdir -p $lucene_sourcedir
----

. Compile the application and test suite
+
NOTE: Use `-DskipTests` to avoid creating the test suite.
+
----
. /opt/eurekastreams/myprefs.sh
mvn clean install -Dopenaccess-security        \
	-Dbuild.db.dbname=$dbname                  \
	-Dbuild.db.dbuser=$dbuser                  \
	-Dbuild.web.baseurl=$baseurl               \
	-Dbuild.web.grbaseurl=$grbaseurl           \
	-Dbuild.db.servername=$dbserver            \
	-Dbuild.lucene.indexdir=$lucene_indexdir   \
	-Dbuild.lucene.sourcedir=$lucene_sourcedir \
	-Dbuild.cache.servernames=$cache
----
+
When the above command completes, you should see output
such as:
+
----
stub
----
